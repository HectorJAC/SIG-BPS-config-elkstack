# input {
#     stdin {}
# }

# output {
#     stdout {
#         codec => json_lines
#     }
# }


# input {
#   jdbc {
#     clean_run => true
#     jdbc_driver_library => "C:\Users\Hector Jose\Documents\elastickstack\logstash-8.15.1\bin\mysql-connector-java-8.0.23.jar"
#     jdbc_driver_class => "com.mysql.jdbc.Driver"
#     jdbc_connection_string => "jdbc:mysql://localhost:3306/planificatech-db"
#     jdbc_user => "root"
#     jdbc_password => "1234"
#     #schedule => "* * * * *"
#     statement => "
#       SELECT 
#         e.fecha_nacimiento,
#         e.fecha_ingreso_empresa,
#         e.id_empleado,
#         e.cedula,
#         e.nombres,
#         e.apellidos,
#         e.nivel_academico,
#         e.numero_telefonico,
#         e.correo,
#         e.sexo,
#         e.salario,
#         e.lugar_nacimiento,
#         e.direccion_residencia,
#         d.nombre_departamento AS nombre_departamento,
#         p.nombre_puesto AS nombre_puesto
#       FROM 
#         empleados e
#       JOIN 
#         departamentos d ON e.id_departamento = d.id_departamento
#       JOIN
#         puestos p ON e.id_puesto = p.id_puesto
#     "
#     use_column_value => true
#     #tracking_column => "category"
#     tracking_column => "id_empleado"
#     type => "empleados"
#   }
# }

# filter {
#   grok {
#     match => { "fecha_nacimiento" => "%{YEAR:year_nacimiento}-%{MONTHNUM:month_nacimiento}-%{MONTHDAY:day_nacimiento}" }
#   }
#   grok {
#     match => { "fecha_ingreso_empresa" => 
#       "%{YEAR:year_ingreso_empresa}-%{MONTHNUM:month_ingreso_empresa}-%{MONTHDAY:day_ingreso_empresa}" 
#     }
#   }

#   mutate {
#     remove_field => ["@version"]
#     remove_field => ["@timestamp"]
#     remove_field => ["type"]
#     remove_field => ["fecha_nacimiento"]
#     remove_field => ["fecha_ingreso_empresa"]

#     remove_field => ["month_nacimiento"]
#     remove_field => ["day_nacimiento"]
#     remove_field => ["month_ingreso_empresa"]
#     remove_field => ["day_ingreso_empresa"]
#   }

#   aggregate {
#     task_id => "%{aggregated_employees}" 
#     code => "
#       map['empleados'] ||= []
#       map['empleados'] << {
#         'fecha_nacimiento' => event.get('year_nacimiento'),
#         'fecha_ingreso_empresa' => event.get('year_ingreso_empresa'),
#         'id_empleado' => event.get('id_empleado'),
#         'cedula' => event.get('cedula'),
#         'nombres' => event.get('nombres'),
#         'apellidos' => event.get('apellidos'),
#         'nivel_academico' => event.get('nivel_academico'),
#         'numero_telefonico' => event.get('numero_telefonico'),
#         'correo' => event.get('correo'),
#         'sexo' => event.get('sexo'),
#         'salario' => event.get('salario'),
#         'lugar_nacimiento' => event.get('lugar_nacimiento'),
#         'direccion_residencia' => event.get('direccion_residencia'),
#         'nombre_departamento' => event.get('nombre_departamento'),
#         'nombre_puesto' => event.get('nombre_puesto')
#       }
#     "
#     push_map_as_event_on_timeout => true
#     timeout_task_id_field => "id_grafica"
#     timeout => 60
#     timeout_tags => ['_aggregatetimeout']
#     timeout_code => "event.set('empleados_json', map['empleados'])"
#   }
# }

# output {
#   stdout {
#     codec => json_lines
#   }
#   jdbc {
#     driver_jar_path => "C:/Users/Hector Jose/Documents/elastickstack/logstash-8.15.1/logstash-core/lib/jars/mysql-connector-java-8.0.23.jar"
#     driver_class => "com.mysql.jdbc.Driver"
#     connection_string => "jdbc:mysql://localhost:3306/sig-prueba"
#     username => "root"
#     password => "1234"
#     statement => [
#       "INSERT INTO graficas (datos_grafica, tipo_grafica, id_empresa) VALUES (?, ?, ?)",
#       "%{empleados_json}",  # AquÃ­ se inserta el JSON con todos los empleados
#       "grafico de barras",  
#       "1"
#     ]
#   }
# }






input {
  jdbc {
    clean_run => true
    jdbc_driver_library => "C:\Users\Hector Jose\Documents\elastickstack\logstash-8.15.1\bin\mysql-connector-java-8.0.23.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://localhost:3306/planificatech-db"
    jdbc_user => "root"
    jdbc_password => "1234"
    #schedule => "* * * * *"
    statement => "
      SELECT 
        e.fecha_nacimiento,
        e.fecha_ingreso_empresa,
        e.id_empleado,
        e.cedula,
        e.nombres,
        e.apellidos,
        e.nivel_academico,
        e.numero_telefonico,
        e.correo,
        e.sexo,
        e.salario,
        e.lugar_nacimiento,
        e.direccion_residencia,
        d.nombre_departamento AS nombre_departamento,
        p.nombre_puesto AS nombre_puesto
      FROM 
        empleados e
      JOIN 
        departamentos d ON e.id_departamento = d.id_departamento
      JOIN
        puestos p ON e.id_puesto = p.id_puesto
    "
    use_column_value => true
    #tracking_column => "category"
    tracking_column => "id_empleado"
    type => "empleados"
  }
}

filter {
  grok {
    match => { "fecha_nacimiento" => "%{YEAR:year_nacimiento}-%{MONTHNUM:month_nacimiento}-%{MONTHDAY:day_nacimiento}" }
  }
  grok {
    match => { "fecha_ingreso_empresa" => 
      "%{YEAR:year_ingreso_empresa}-%{MONTHNUM:month_ingreso_empresa}-%{MONTHDAY:day_ingreso_empresa}" 
    }
  }

  mutate {
    remove_field => ["@version"]
    remove_field => ["@timestamp"]
    remove_field => ["type"]
    remove_field => ["fecha_nacimiento"]
    remove_field => ["fecha_ingreso_empresa"]

    remove_field => ["month_nacimiento"]
    remove_field => ["day_nacimiento"]
    remove_field => ["month_ingreso_empresa"]
    remove_field => ["day_ingreso_empresa"]

    add_field => {
      "empleado_json" => '{
        "fecha_nacimiento": "%{year_nacimiento}",
        "fecha_ingreso_empresa": "%{year_ingreso_empresa}",
        "id_empleado": "%{id_empleado}",
        "cedula": "%{cedula}",
        "nombres": "%{nombres}",
        "apellidos": "%{apellidos}",
        "nivel_academico": "%{nivel_academico}",
        "numero_telefonico": "%{numero_telefonico}",
        "correo": "%{correo}",
        "sexo": "%{sexo}",
        "salario": "%{salario}",
        "lugar_nacimiento": "%{lugar_nacimiento}",
        "direccion_residencia": "%{direccion_residencia}",
        "nombre_departamento": "%{nombre_departamento}",
        "nombre_puesto": "%{nombre_puesto}"
      }'
    }
  }

  # json {
  #   source => "empleado_json"
  #   target => "empleado_json"
  # }
}

# output {
#   jdbc {
#     driver_jar_path => "C:\Users\Hector Jose\Documents\elastickstack\logstash-8.15.1\logstash-core\lib\jars\mysql-connector-java-8.0.23.jar"
#     driver_class => "com.mysql.jdbc.Driver"
# 		connection_string => "jdbc:mysql://localhost:3306/sig-prueba"
#     username => "root"
#     password => "1234"
#     statement => [
#       "
#         INSERT INTO graficas (id_nombre_grafica, datos_grafica, tipo_grafica, id_empresa) 
#         VALUES (?, ?, ?, ?)
#       ",
#       1,
#       "%{empleado_json}",
#       "%{grafico de barras}",
#       1  
#     ]

#     # statement => [
#     #   "INSERT INTO graficas (id_nombre_grafica, datos_grafica, tipo_grafica, id_empresa) VALUES(?, ?, ?, ?)",
#     #   "1",
#     #   "%{empleado_json}"
#     #   "grafico de barras",  
#     #   "1"     
#     # ]
# 	}
# }

output{
  elasticsearch {	
    hosts => ["http://localhost:9200/"]
    index => "empleados_idx"
    data_stream => false
    # user => "elastic"
    # password => "Tgaskz+oYqC=zxOI0y*o"
    # ssl => false
    # ssl_certificate_verification => false
  }  
}

# output {
#   mongodb {
#     id => "my_mongodb_plugin_id"
#     collection => "empleados"
#     database => "prueba"
#     uri => "mongodb://localhost:27017/sig-bps"        
#     codec => "json"
#   }
# }

# output {
#   jdbc {
#     driver_class => "com.mysql.jdbc.Driver"
# 		connection_string => "jdbc:mysql://localhost:3306/sig-prueba"
# 		statement => [ "INSERT INTO empledos_sig (host, timestamp, message) VALUES(?, CAST(? AS timestamp), ?)", "host", "@timestamp", "message" ]
# 	}
# }


# filter {
#   mutate {
#     remove_field => ["@version"]
#   }
# }
# output{
#     elasticsearch {	
#       hosts => ["http://localhost:9200/"]
#       index => "personas_idx"
#       data_stream => false
#       # user => "elastic"
#       # password => "bkVhjvVRltnD6tvU1I8A"
#       # ssl => false
#       # ssl_certificate_verification => false
#     }
   
# }

# Para la base de datos de transaccional
# input {
#     jdbc {
#       clean_run => true
#       jdbc_driver_library => "C:\Users\Hector Jose\Documents\elastickstack\logstash-8.15.1\bin\ojdbc10.jar"
#       jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
#       jdbc_connection_string => "jdbc:oracle:thin:@//192.168.20.255:1521/PRUEBA"
#       jdbc_user => "transaccional"
#       jdbc_password => ""
#       #schedule => "* * * * *"
#       statement => "select * from persona"
#       use_column_value => true
#       #tracking_column => "category"
#       tracking_column => "id_persona"
#       type => "persona"
#     }
# }